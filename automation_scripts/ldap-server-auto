
#!/bin/bash

echo "installing git"
yum -y install git
echo "clonig git"
echo "cloning fjemal's NTI-310 GitHub..."
git clone https://github.com/fjemal/NTI-310.git /tmp/NTI-310
git config --global user.name "fjemal"
git config --global user.email "fjemal01@seattlecentral.edu"
#Installing ldap server
#https://www.server-world.info/en/note?os=CentOS_7&p=openldap

#This is a basis for students to create a fully functioning build, compile, and deploy script.
echo "intalling servers and clients packages"
yum -y update
yum -y install openldap compat-openldap openldap-clients openldap-servers openldap-servers-sql openldap-devel

echo "copying config files"
cp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG 
chown ldap. /var/lib/ldap/DB_CONFIG

# Tell SE linux what's going on, so that it doesn't freek
setsebool -P httpd_can_connect_ldap on
systemctl enable slapd
systemctl start slapd

echo "installing and enabling apache server"
yum -y install httpd
systemctl enable httpd
systemctl start httpd

# decent config guide: http://www.itzgeek.com/how-tos/linux/centos-how-tos/install-configure-phpldapadmin-centos-7-ubuntu-16-04.html
#Note: LDAP comes up completely insecure, with Anonymous login enabled by default... this is not a good and happy thing, so fix 
#it in the config file
#(prompt for user input), the following is currently a manual config, but could be automated fairly easily
 
echo "start slapd service" 
systemctl start slapd.service 
systemctl enable slapd.service 

echo "generating ldap slappasswrd"
newsecret=$(slappasswd -g)
newhash=$(slappasswd -s "$newsecret")
echo -n "$newsecret" > /root/ldap_admin_pass
chmod 0600 /root/ldap_admin_pass

chown ldap: /etc/openldap/slapd.d/db.ldif
echo "add db.ldif to ldap configuration"

 echo "dn: olcDatabase={2}hdb,cn=config
changetype: modify
replace: olcSuffix
olcSuffix: dc=ldap,dc=local

dn: olcDatabase={2}hdb,cn=config
changetype: modify
replace: olcRootDN
olcRootDN: cn=ldapadm,dc=ldap,dc=local

dn: olcDatabase={2}hdb,cn=config
changetype: modify
replace: olcRootPW
olcRootPW: $newhash" >>  /etc/openldap/slapd.d/db.ldif
chown ldap: /etc/openldap/slapd.d/db.ldif
#echo "add db.ldif to ldap configuration"
ldapmodify -Y EXTERNAL  -H ldapi:/// -f  /etc/openldap/slapd.d/db.ldif

#restrict monitor users
cat <<EOT>> /etc/openldap/slapd.d/monitor.ldif
dn: olcDatabase={1}monitor,cn=config
changetype: modify
replace: olcAccess
olcAccess: {0}to * by dn.base="gidNumber=0+uidNumber=0,cn=peercred,cn=external, cn=auth" read by dn.base="cn=ldapadm,dc=ldap,dc=local" read by * none' > monitor.ldif
EOT
#ldapmodify -Y EXTERNAL  -H ldapi:/// -f monitor.ldif
ldapmodify -Y EXTERNAL  -H ldapi:/// -f /etc/openldap/slapd.d/monitor.ldif

systemctl start slapd.service
systemctl enable slapd.service

#send the configuration to the LDAP server.

cp /tmp/NTI-310/config_scripts/monitor.ldif /etc/openldap/slapd.d/monitor.ldif
chown ldap. /etc/openldap/slapd.d/monitor.ldif
#ldapmodify -Y EXTERNAL  -H ldapi:/// -f /etc/openldap/slapd.d/monitor.ldif
#Create LDAP certificate
openssl req -new -x509 -nodes -out /etc/openldap/certs/fjldapcert.pem -keyout /etc/openldap/certs/fjldapkey.pem -days 365 -subj "/C=US/ST=WA/L=Seattle/O=SCC/OU=IT/CN=ldap.local"
chown -R ldap. /etc/openldap/certs/*.pem
#chown -R ldap. /etc/openldap/certs/fjldapkey.pem
echo "dn: cn=config
changetype: modify
replace: olcTLSCertificateFile
olcTLSCertificateFile: /etc/openldap/certs/fjldapcert.pem

dn: cn=config
changetype: modify
replace: olcTLSCertificateKeyFile
olcTLSCertificateKeyFile: /etc/openldap/certs/fjldapkey.pem" > certs.ldif

ldapmodify -Y EXTERNAL  -H ldapi:/// -f certs.ldif
chown ldap: certs.ldif
# Test cert configuration

slaptest -u

unalias cp
#Set up LDAP database
cp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG
chown ldap:ldap /var/lib/ldap/*
echo "Adding schemas"
ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/cosine.ldif
ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/nis.ldif
ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/inetorgperson.ldif

echo "adding new entry cn=inetorgperson,cn=schema,cn=config"
echo "generating base.ldif file for your domain

#chown ldap: /etc/openldap/slapd.d/base.ldif
echo "dn: dc=ldap,dc=local
dc: ldap
objectClass: top
objectClass: domain

dn: cn=ldapadm,dc=ldap,dc=local
objectClass: organizationalRole
cn: ldapadm
description: LDAP Manager

dn: ou=People,dc=ldap,dc=local
objectClass: organizationalUnit
ou: People

dn: ou=Group,dc=ldap,dc=local
objectClass: organizationalUnit
ou: Group" > /etc/openldap/slapd.d/base.ldif 

#Build the directory structure.
echo "adding base.ldif to ldap server
cp /tmp/NTI-310/config_scripts/base.ldif /etc/openldap/slapd.d/base.ldif

#ldapadd -x -W -D "cn=ldapadm,dc=ldap,dc=local" -f base.ldif -y /root/ldap_admin_pass
ldapadd -x -D "cn=ldapadm,dc=ldap,dc=local" -f /etc/openldap/slapd.d/base.ldif -y /root/ldap_admin_pass
#allow firewall
firewall-cmd --permanent --zone=public --add-service=http
firewall-cmd --reload

echo "installing phpldadadmin"
yum -y install epel-release
yum install -y phpldapadmin
sed -i 's,Require local,#Require local\n    Require all granted,g' /etc/httpd/conf.d/phpldapadmin.conf
chown ldap:apache /etc/phpldapadmin/config.php

yum -y install mod_ssl
mkdir /etc/ssl/private
chmod 700 /etc/ssl/private
#ls -lah /etc/ssl/private/
ls -lah /etc/ssl/private/
ls -lah /etc/ssl/

openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/apache-selfsigned.key -subj "/C=US/ST=WA/L=Seattle/O=IT/OU=NTI310IT/CN=ldap.local" -out /etc/ssl/certs/apache-selfsigned.crt
openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048
cat /etc/ssl/certs/dhparam.pem | tee -a /etc/ssl/certs/apache-selfsigned.crt
#modify /etc/httpd/conf.d/ssl.conf

sed  -i '/<VirtualHost *:443>\a Alias \/phpldapadmin \/usr\/share\/phpldapadmin\/htdocs' /etc/httpd/conf.d/ssl.conf
sed  -i '/Alias \/phpldapadmin \/usr\/share\/phpldapadmin\/htdocs/a Alias \/ldapadmin \/usr\/share\/phpldapadmin\/htdocs' /etc/httpd/conf.d/ssl.conf
sed  -i '/Alias \/ldapadmin \/usr\/share\/phpldapadmin\/htdocs/a DocumentRoot \"\/usr\/share\/phpldapadmin\/htdocs\"' /etc/httpd/conf.d/ssl.conf
sed  -i '/DocumentRoot \"\/usr\/share\/phpldapadmin\/htdocs\"/a ServerName ldap:443' /etc/httpd/conf.d/ssl.conf

#update cypher suite
sed -i "s/SSLProtocol all -SSLv2/#SSLProtocol all -SSLv2/g" /etc/httpd/conf.d/ssl.conf
sed -i "s/SSLCipherSuite HIGH:MEDIUM:\!aNULL:\!MD5:\!SEED:\!IDEA/#SSLCipherSuite HIGH:MEDIUM:\!aNULL:\!MD5:\!SEED:\!IDEA/g" /etc/httpd/conf.d/ssl.conf
cat <<EOT>> /etc/httpd/conf.d/ssl.conf
# Begin copied text
# from https://cipherli.st/
# and https://raymii.org/s/tutorials/Strong_SSL_Security_On_Apache2.html
SSLCipherSuite EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH
SSLProtocol All -SSLv2 -SSLv3
SSLHonorCipherOrder On
# Disable preloading HSTS for now.  You can use the commented out header line that includes
# the "preload" directive if you understand the implications.
#Header always set Strict-Transport-Security "max-age=63072000; includeSubdomains; preload"
Header always set Strict-Transport-Security "max-age=63072000; includeSubdomains"
Header always set X-Frame-Options DENY
Header always set X-Content-Type-Options nosniff
# Requires Apache >= 2.4
SSLCompression off
SSLUseStapling on
SSLStaplingCache "shmcb:logs/stapling-cache(150000)"
# Requires Apache >= 2.4.11
# SSLSessionTickets Off
EOT
#edit /etc/sysconfig/slapd
sed -i 's/SLAPD_URLS="ldapi:\/\/\/ ldap:\/\/\/"/SLAPD_URLS=\"ldapi:\/\/\/ ldap:\/\/\/ ldaps:\/\/\/"/g' /etc/sysconfig/slapd

#restart httpd and slapd

echo "TLS_REQCERT allow" >> /etc/openldap/ldap.conf
echo "tls_reqcert allow" >> /etc/nslcd.conf
authconfig --enableldaptls --update 

systemctl restart httpd
systemctl restart slapd
#allow firewall
firewall-cmd --permanent --zone=public --add-service=http
firewall-cmd --reload


systemctl restart httpd.service
