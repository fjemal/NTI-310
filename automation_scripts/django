#!/bin/bash
#echo "cloning fjemal01's NTI-310 GitHub..."

yum -y install git
git clone https://github.com/fjemal/NTI-310.git /tmp/NTI-310
git config --global user.name "fjemal"
git config --global user.email "fjemal01@seattlecentral.edu"

#install and start Apache
echo "installing and enabling apache"

sudo yum -y install httpd
sudo systemctl enable httpd

echo "starting apche server"
sudo systemctl start httpd
echo "Current python version:"

python --version

echo "installing virtualenv so we can give django its own version of python"

sudo rpm -iUvh https://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-9.noarch.rpm

sudo yum -y install python-pip

sudo yum -y install python-pip httpd mod_wsgi

# Now we're installing virtualenv, which will allow us to create a python installation and environment, just for our Django server
sudo pip install virtualenv

cd /opt
# we're going to install our django libs in /opt, often used for optional or add-on.  /usr/local is also a perfectly fine place for new apps
# we want to make this env accisible to the ec2-user at first, because we don't want to have to run it as root.

sudo mkdir django
sudo chown -R fjemal django

sleep 5

cd django

sudo virtualenv django-env

echo "activating virtualenv"

source /opt/django/django-env/bin/activate

echo "to switch out of virtualenv, type deactivate"

which python

sudo chown -R fjemal /opt/django

echo "installing django"
 
pip install django

echo "django admin is version:"

django-admin --version

django-admin startproject project1

sudo yum -y install tree
tree project1


echo "Adjusting settings.py allowed_hosts..."

sed -i "s,ALLOWED_HOSTS = \[\],ALLOWED_HOSTS = \['*'\],g" /opt/django/project1/project1/settings.py\

echo 'STATIC_ROOT = os.path.join(BASE_DIR, "static/")' >> /opt/django/project1/project1/settings.py

cd /opt/django/project1
/opt/django/django-env/bin/python manage.py makemigrations
/opt/django/django-env/bin/python manage.py migrate
echo yes | /opt/django/django-env/bin/python manage.py collectstatic
sudo chmod 644 /opt/django/project1/manage.py
#sudo setenforce 0
deactivate

sudo cp /NTI-310/config_scripts/httpd.conf /etc/httpd/conf/httpd.conf

#sudo usermod -a -G fadilj apache

sudo setenforce 0

sudo systemctl restart httpd
echo "Django is to accessible from port 8000"

ip1=$(gcloud compute instances list | grep postgres-server | awk '{print $4}')

sed -i "s/        'ENGINE': 'django.db.backends.sqlite3',/        'ENGINE': 'django.db.backends.postgresql_psycopg2',/g" /opt/django/project1/project1/settings.py
sed -i "s/        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),/        'NAME': 'project1',/g" /opt/django/project1/project1/settings.py
sed -i "80i 'USER': 'project1'," /opt/django/project1/project1/settings.py
sed -i "81i 'PASSWORD': 'P@ssw0rd1'," /opt/django/project1/project1/settings.py
sed -i "82i 'HOST': 'ip'," /opt/django/project1/project1/settings.py
sed -i "83i 'PORT': '5432'," /opt/django/project1/project1/settings.py
sed -i "s/'USER': 'project1',/        'USER': 'project1',/g" /opt/django/project1/project1/settings.py
sed -i "s/'PASSWORD': 'P@ssw0rd1',/        'PASSWORD': 'P@ssw0rd1',/g" /opt/django/project1/project1/settings.py
sed -i "s/'HOST': 'ip',/        'HOST': 'ip1',/g" /opt/django/project1/project1/settings.py
sed -i "s/'PORT': '5432',/        'PORT': '5432',/g" /opt/django/project1/project1/settings.py

#echo "activating django"
source /opt/django/django-env/bin/activate
sudo yum -y install python-devel postgresql-devel
sudo yum -y install gcc

pip install psycopg2

cd /opt/django/project1
python manage.py makemigrations
python manage.py migrate

cd /opt/django/project1

echo "from django.contrib.auth.models import User; User.objects.create_superuser('fjemal', 'fjemal01@seattlecentral.edu', 'P@ssw0rd1')" | python manage.py shell

#deactivate
sudo setsebool -P httpd_can_network_connect_db on
sudo systemctl restart httpd


python manage.py runserver 0.0.0.0:8000&
#for disallowed host error edit project1/settings.py and add the django ip to ALLOWED_HOST
